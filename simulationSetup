Important!!
In this file do not use the equal sign in a comment because that is the trigger to read an input.

The units we use are:
Length millimeter mm
Mass gram g
time millisecond ms

Read from NodesMuscles file (0) or read from a previous run (1).
Should be a 0 or a 1.

--NodesMusclesFileOrPreviousRunsFile = 0;

Name of the files that holds the nodes and muscles. 
Line11
Circle24
Circle200
CSphere340
CSphere5680
IdealLeftAtrium2.3K
IdealLeftAtrium13.0KNotTriangle
LeftAtriumRealBase
LeftAtriumRealRemovedAppendage
LeftAtriumRealPartialAppendage
TheRock
The code is not currently written for models with depth but it does work on them. Us the 3D models with this in mind.
3DIdealLAtrium2.3K
3DIdealLAtrium13K

Place the Nodes and Mucsle file you would like to run here.

--InputFileName = IdealLeftAtrium2.3K

Name of previuos run files that were stored in GitHub. 
test1
If you have made a previous run file and would like to run it just place its name below. Also this file will not
be copied up to GitHub. So you can build as many as you want without clutering up the GitHub folder. If you have a good
run that you want in GitHub for everyone to use you will need to manually place it in GitHub.
 
Place the name of the previous run file you would like to run here.

--PreviousRunFileName = test1

Note: you will only read from a (nodes and muscle file) or from a (previuos run file) not both. 

Connection line width for for the lines that represent muscles connecting the nodes. 
1.0 to 3.0 looks good for simulations with many nodes and 5.0 to 10.0 for simulations with fewer nodes. 
It should be a float.
	
--LineWidth = 3.0;

Set the size of the node sphere here. It is scaled by the RadiusOfLeftAtrium. A good value is 0.01. 
It should be a float.

--NodeRadiusAdjustment = 0.01;

What we are using for the mass of a myocyte. Myocytes are approximately 80-100 micrometers or 0.08-.1 millimeters in length
??????? Need to work on this to make it LA with what Kyla found. ????????????????
and 10-20 micrometers or 0.01-0.02 millimeters in width (Chapter 12 - Cardiovascular and Skeletal Muscle Systems
Author links open overlay panelWanda M.HaschekColin G.RousseauxMatthew A.Wallig). Treating the myocyte as a cylinder with length 0.09 mm and diameter 0.015 mm
you get a volume of pi*((0.015/2)^2)*0.09 which is 0.00001590431281 mm^3. 
The clinically accepted value of myocardial tissue density is 1.055â€‰g/ml (https://bmcmedimaging.biomedcentral.com/articles/10.1186/s12880-019-0326-4).
This gives the mass of a myocyte as 1.6779E-8 grams
The contraction force of myocyte is about 10 micro Newtons (not sure where Avery got this need to site it.) This 1e-5 g*mm/ms^2.
This gives force per mass of a myocyte as 596 mm/ms^2. I will use this to scale the contraction force of our muscles.
All three should be floats.

--MyocyteForcePerMass = 596.0;
--MyocyteForcePerMassMultiplier = 1.0;
--MyocyteForcePerMassSTD = 0.0;

This will be the strength of the central push back force which will simulate blood pressure.
Our units for pressure are grams/(Millimeters*(Millisecons^2)).
1 millimeters of mercury is 133.322387415 Pascals which is in kg/(meters*seconds*seconds).
Putting this into our units of grams, milliseconds, millimeters gives 0.01333224.
So 1 millimeter of Mercury is 0.000133322387415 in our units of g/(mm*ms*ms)
Here just enter the pressure in the left atrium in millimeters of Mercury and we will fix the 
units in the code. Good starting values are diastolic 2.0 and systolic 12.0 [1].
We have added a multiplier incase this pressure does not give enough push back
in the simulation to have the LA regain its shape after contraction. This will be multiplied 
by the pressures so the user can adjust the simulation as desired. 
All three should be floates.

--DiastolicPressureLA = 2.0;
--SystolicPressureLA = 12.0;
--PressureMultiplier = 10.0;

This is the mass of the LA that you will be using. A good value for the Left atria is 25 grams.
From ???
It should be a float.
 
--MassOfLeftAtrium = 25.0;

This should be the average radius of the Left atriam. The LA holds around 23640 cubic millimeters of blood 
which gives a radius of 17.8 millimeters. From ???
It should be a float.

--RadiusOfLeftAtrium = 17.8;

To remove energy biuldup in the system we added a drag coeffecent that works oposite to velocity. 
This This helps keep the system from quivering and wandering around. A value around 1.0 works well.
It should be a float.

--Drag = 1.0;

If you want to turn off muscle contractions and just watch the electrical process you do that by setting 
this flag to 0.
1 (true) turns the muscle contraction on.
0 (false) turns the muscle contraction off. This will speed the simulation up if you are just studing the electrical action.
It should be a 0 or a 1.

--ContractionIsOn = 1;

The strength of a relaxed muscle. It is opposite the contraction force to help return the muscle to its natural length. 
This should be a small fraction of the contraction force.
It must be less than 1.0 or you will get a relaxed strength greater than your contraction strength.
It should be a float.

--MuscleRelaxedStrengthFraction = 0.2;

The fraction of a muscles natural length once it is contracted. 
A muscle should lose 30% of its length during contraction so this should be 0.7. From ???
We added a standard deviation incase the use would like to add a little stocasity to the simulation.
Keep this number small. We suggest a number in (0.0, 0.2).
Both should be floats.

--MuscleCompresionStopFraction = 0.7;
--MuscleCompresionStopFractionSTD = 0.0;

The length of time a muscle is contracting and relaxing. 
A standard value is around 300 milliseconds. From ???
We added a standard deviation incase the use would like to add a little stocasity to the simulation.
We suggest a number in (0.0, 100.0).
Both should be floats.

--BaseMusclerRefractoryPeriod = 300.0;
--MuscleRefractoryPeriodSTD = 0.0;

This is the portion of the refractory period that is absolute. A standard value is 0.9. From ???
The relative refractory period will be what is left over and will be calculated in the code.
We added a standard deviation incase the use would like to add a little stocasity to the simulation.
Keep this number small. We suggest a number in (0.0, 0.1).
Both should be floats.

--AbsoluteRefractoryPeriodFraction = 0.9;
--AbsoluteRefractoryPeriodFractionSTD = 0.0;

The speed of the conduction velocity across a muscle. 
This will scaled by the muscle length to get the time it takes to cross a muscle.
This should be around 0.5 millimeters/milliseconds. From ???
We added a standard deviation incase the use would like to add a little stocasity to the simulation.
Keep this number small. We suggest a number in (0.0, 0.1).
Both should be floats.

--BaseMuscleConductionVelocity = 0.5;
--MuscleConductionVelocitySTD = 0.0;

The length of time between heart beats. 
A 1000 milliseconds is 60 beats per minute.
Should be a float.

--BeatPeriod = 600.0;

How often you update the terminal, in milliseconds.
Should be a float.

--PrintRate = 100.0;

How often you update the picture of the simulation to the screen. This is in iterations not time.
Should be an int.

--DrawRate = 1000;

Your time step 0.0001 to 0.001 or whatever is the fraction of a time unit in each iteration.
Should be a float.

-- Dt = 0.001;

Ready color red, green, blue.
All three should be floats.

--ReadyRed = 1.0;
--ReadyGreen = 0.0;
--ReadyBlue = 0.0;

Contracting color red, green, blue.
All three should be floats.

--ContractingRed = 1.0;
--ContractingGreen = 1.0;
--ContractingBlue = 0.0;

Resting (second portion of the absolute refractory period 
contracting color took up the first part) color red, green, blue.
All three should be floats.

--RestingRed = 0.5451;
--RestingGreen = 0.2706;
--RestingBlue = 0.0745;

Relative Refractory Period color red, green, blue.
All three should be floats.

--RelativeRed = 1.0;
--RelativeGreen = 0.0784;
--RelativeBlue = 0.5765;

Dead color red, green, blue.
All three should be floats.

--DeadRed = 1.0;
--DeadGreen = 1.0;
- = 1.0;

Background color red, green, blue.
All three should be floats.

--BackGroundRed = 0.0;
--BackGroundGreen = 0.0;
--BackGroundBlue = 0.0;

References:
1) https://www.msdmanuals.com/professional/multimedia/table/normal-pressures-in-the-heart-and-great-vessels?utm_source=chatgpt.com

